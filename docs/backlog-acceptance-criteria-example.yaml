# backlog.yaml 改善例：acceptance_criteria構造の追加

iteration:
  id: "20250815-001"
  core_value: "手軽にアクセスできるパズルゲーム体験による集中力とリフレッシュ"
  minimum_experience: "ブラウザでテトロミノを操作してラインを消すゲーム体験"
  target_experience: "没入感のある高品質なテトリスゲーム体験"
  value_experiencers: "パズルゲーム愛好者、カジュアルゲーマー、学習者・作業者"

stories:
  - id: "tetris-core-01"
    title: "基本的なテトロミノ落下とゲームフィールド"
    value_story: |
      As a パズルゲーム愛好者
      I want テトロミノが自動的に落下するゲームフィールドを見る
      So that テトリスゲームの基本体験を開始できる
      And I expect 視覚的に美しく分かりやすいゲーム画面を体験できること
    core_value: "ゲーム体験の基盤となるビジュアル環境"
    minimum_experience: "テトロミノが画面上で落下する様子を見る"
    
    # 🎯 新規追加：受け入れ基準（E2Eテストに直接変換可能）
    acceptance_criteria:
      - "ブラウザでページを開くとゲーム画面（Canvasまたはゲーム領域）が表示される"
      - "ゲーム開始と同時に、テトロミノ（I/O/T/S/Z/J/L型の1つ）が画面上部に出現する"
      - "テトロミノは1秒間隔で自動的に1行下に移動し続ける"
      - "テトロミノがゲームフィールドの底部に到達すると移動を停止する"
      - "ゲームフィールドの境界（左右の壁、底部）が視覚的に明確に識別できる"
      - "「開発中」「準備中」「Coming Soon」等のプレースホルダーメッセージが表示されない"
      - "ページ読み込みから3秒以内にゲームが開始される"
    
    # 従来の構造は維持
    hypothesis: "ユーザーはテトロミノの落下を見ることでテトリスゲームの開始を実感する"
    kpi_target: "90%のユーザーがゲーム画面を理解できる"
    success_metrics:
      - "テトロミノがゲームフィールド内で落下すること"
      - "ゲームフィールドの境界が明確に表示されること"
      - "落下スピードが自然であること"
    value_uniqueness: "クリアで視認性の高いブラウザゲーム表示"
    value_experiencer: "初回訪問者"
    value_context: "ブラウザでゲームサイトを開いた瞬間"
    status: "in-progress"
    priority: "Core Value"
    updated_at: "2025-08-15T23:45:00+09:00"
    
  - id: "tetris-core-02"
    title: "キーボード操作によるテトロミノ制御"
    value_story: |
      As a ゲームプレイヤー
      I want キーボードでテトロミノを移動・回転させる
      So that 自分の意図通りにパズルピースを配置できる
      And I expect 直感的で反応性の高い操作感を体験できること
    core_value: "ユーザーのコントロール感と操作の楽しさ"
    minimum_experience: "矢印キーでテトロミノを移動・回転する"
    
    # 🎯 操作系ストーリーの受け入れ基準例
    acceptance_criteria:
      - "左矢印キーを押すとテトロミノが即座に1列左に移動する"
      - "右矢印キーを押すとテトロミノが即座に1列右に移動する"
      - "上矢印キーを押すとテトロミノが時計回りに90度回転する"
      - "下矢印キーを押すとテトロミノの落下速度が通常の10倍になる"
      - "キー押下から100ms以内に視覚的な変化が表示される"
      - "画面外やブロックとの衝突時は移動・回転が制限される"
      - "無効な操作時でもゲームが停止またはエラー表示しない"
    
    hypothesis: "直感的な操作により、ユーザーはゲームをコントロールしている実感を得る"
    kpi_target: "95%のユーザーが操作方法を即座に理解できる"
    success_metrics:
      - "左右矢印キーでテトロミノが移動すること"
      - "上矢印キーでテトロミノが回転すること"
      - "下矢印キーで落下速度が上がること"
      - "操作に対する反応が即座であること"
    value_uniqueness: "ウェブブラウザでの滑らかなキーボード操作"
    value_experiencer: "ゲーム操作を試すユーザー"
    value_context: "ゲーム画面でキーボードを触った時"
    status: "pending"
    priority: "Core Value"

# 🎯 acceptance_criteriaの設計原則:
# 1. 具体的な動作: 「何が」「どのように」「いつ」明記
# 2. テスト可能: E2Eテストで自動検証できる形式
# 3. ユーザー視点: 技術仕様ではなく体験の観点
# 4. 定量的: 時間、サイズ、位置などの具体的な値
# 5. 否定的条件: 「〜してはいけない」も明記（プレースホルダー等）